=define_helper_functions

%section#paretoModal.panel.radius.analysis-chart
  %a.close-reveal-modal &#215
  %h3.subheader="Pareto chart"

  .row
    .small-5.columns
      %label.inline="Select output parameter"
    .small-7.columns
      %select(class="moe_info_list" id ="outputParam")

  .row
    %ul.inline-list
      %li
        %button.refresh Refresh moes
      %li
        %button.radius Load chart
      %li
        =loading_gif('busy_pareto')

  .charts
    .scripts

- filter = {is_done: true, is_error: {'$exists'=> false}}
- fields = {fields: {result: 1}}
- result = @experiment.simulation_runs.where(filter, fields).first
:javascript

  $(function(){

    /* function from global variable moes_info_json create html selectbox with moe values and then replacing exiting values with new ones */
    window.reload_pareto_params = function(){
      $("#busy_pareto").show();

      if (("#{params[:stand_alone]}" == "true") || ("#{params[:stand_alone]}" == "false" && "#{params[:moes_info_exist]}" == "false")) {
        moes_info_json = getMoesInfoJson(#{@experiment.get_parameter_ids}, #{result.result.keys});
        moes_info = getMoeInfo(#{result.result.keys}, #{result.result.values});
      }
      
      reload_selectbox_parameters();
      $('#busy_pareto').hide();
    };
    reload_pareto_params();
    var reload_modal_params = function(){
      reload_pareto_params();
      toastr.success('Moes refreshed');
    };
    var pareto_chart_counter = 0;
    var load_chart = function() {
      var pareto_chart_div = $("<div id=\"pareto_chart_"+pareto_chart_counter+"\">")[0];
      $("#paretoModal .charts").prepend(pareto_chart_div);

      var outputParam = $("#paretoModal select#outputParam option:selected").val();
      var index_of_moe = window.moes_info.moes_names.indexOf(outputParam);
      var type_of_moe = window.moes_info.moes_types[index_of_moe];
      outputParam = escapeHtml(outputParam);

      if (type_of_moe == 'string') {
        toastr.error('Cannot plot for string type parameter - ' + outputParam);
        $("#busy_pareto").hide();
        return;
      }

      var query_params = "experiment_id=#{@experiment.id}";
      query_params += "&output="+outputParam;
      query_params += "&chart_id="+pareto_chart_counter;
      query_params += "&stand_alone=false";

      var url = "#{@prefix}/chart_instances/pareto?"+query_params;

      var handler = function(data) {
        $("#busy_pareto").hide();
        var targetOffset = $(pareto_chart_div).offset().top;
        $('html,body').animate({ scrollTop: targetOffset }, 1000);
        $(pareto_chart_div).html(data);
      };
      getWithSession(url, {}, handler, onErrorHandler);
      pareto_chart_counter++;

    };

    $("#paretoModal").find("button.refresh").bind("click", reload_modal_params);

    $("#paretoModal").find("button.radius").bind("click", function() {
      $('#busy_pareto').show();
      load_chart();
      });

  });

