=define_helper_functions

%section#interaction_chart_form.panel.radius.analysis-chart
  %a.close-reveal-modal &#215
  %h3.subheader="Interaction chart"

  .row
    .small-5.columns
      %label.inline="Select first parameter"
    .small-7.columns
      %select(id ="first_param" class="param_info_list")
  .row
    .small-5.columns
      %label.inline="Select second parameter"
    .small-7.columns
      %select(id ="second_param" class="param_info_list")

  .row
    .small-5.columns
      %label.inline="Select output parameter"
    .small-7.columns
      %select(id ="output_param" class="moe_info_list")

  .row
    %ul.inline-list
      %li
        %button.refresh Refresh moes
      %li
        %button.radius Load chart
      %li
        %img(src="#{image_url("loading.gif")}" id='busy_interaction' class='loading_chart_gif' size='16x16' style='display: none' )




.charts
  .scripts

:javascript

  $(function(){

    /* function from global variable moes_info_json create html selectbox with moe and params values and then replacing exiting values with new ones*/
    window.reload_interaction_params = function(){
      $("#busy_interaction").show();
      reload_selectbox_parameters();
      $('#busy_interaction').hide();

    };
    reload_interaction_params();

    var interaction_chart_counter = 0;
    var load_chart = function(){
      var interaction_chart_div = $("<div id=\"interaction_chart_"+interaction_chart_counter+"\">")[0];
      $("#interactionModal .charts").prepend(interaction_chart_div);
        //TODO - if there's nothing to select -> do nothing
      var x_selector = $("#interactionModal select#first_param option:selected");
      var y_selector = $("#interactionModal select#second_param option:selected");
      var output_param_selector = $("#interactionModal select#output_param option:selected");

      var x_axis_label = x_selector.text();
      var y_axis_label = y_selector.text();
      var output_param_label = output_param_selector.text();

      var x_axis = x_selector.val();
      var y_axis = y_selector.val();
      var output_param = output_param_selector.val();

      x_axis_label = escapeHtml(x_axis_label);
      y_axis_label = escapeHtml(y_axis_label);
      output_param_label = escapeHtml(output_param_label);

      x_axis = escapeHtml(x_axis);
      y_axis = escapeHtml(y_axis);
      output_param = escapeHtml(output_param);

      if (check_if_string_parameter(x_axis, 'input', x_axis_label)
        || check_if_string_parameter(y_axis, 'input', y_axis_label)
        || check_if_string_parameter(output_param, 'moe', output_param_label)) return;

      var query_params = "experiment_id=#{@experiment.id}";
      query_params += "&param_x_label="+x_axis_label;
      query_params += "&param_y_label="+y_axis_label;
      query_params += "&output_label="+output_param_label;

      query_params += "&param_x="+x_axis;
      query_params += "&param_y="+y_axis;
      query_params += "&output="+output_param;
      query_params += "&chart_id="+interaction_chart_counter;


      var url = "#{@prefix}/chart_instances/interaction?"+query_params;

      var handler = function(data) {
        $("#busy_interaction").hide();
        var targetOffset = $(interaction_chart_div).offset().top;
        $('html,body').animate({ scrollTop: targetOffset }, 1000);
        $(interaction_chart_div).html(data);
      };
      getWithSession(url, {}, handler, onErrorHandler);
      interaction_chart_counter++;

    };
    $("#interactionModal").find("button.refresh").bind("click", reload_interaction_params);

    $("#interactionModal").find("button.radius").bind("click", function() {
      $('#busy_interaction').show();
      load_chart();
      });
    });

    function type_of_parameter(parameter, character_of_parameter) {
      if (character_of_parameter == 'moe') {
        var index_of_moe = window.moes_info.moes_names.indexOf(parameter)
        return window.moes_info.moes_types[index_of_moe]
      }
      else {
        var index_of_input = window.moes_info.inputs_names.indexOf(parameter)
        return window.moes_info.inputs_types[index_of_input]
      }
    }

    function check_if_string_parameter(name_of_parameter, character_of_parameter, name_of_parameter_label) {
      if (type_of_parameter(name_of_parameter, character_of_parameter) == 'string') {
        toastr.error('Cannot plot for string type parameter - ' + name_of_parameter_label);
        $("#busy_interaction").hide();
        return true;
      }
    }

