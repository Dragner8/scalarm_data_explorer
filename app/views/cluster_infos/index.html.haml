- filter = {is_done: true, is_error: {'$exists'=> false}}
- fields = {fields: {result: 1}}
- result = @experiment.simulation_runs.where(filter, fields).first
- output_parameters=[]
- if result.blank?
  - output_parameters = ["No results found in completed simulation runs"]
- else
  - output_parameters = result.result.keys
- input_parameters = @experiment.get_parameter_ids
- simulation_array = params[:simulations].split(',').map{|s| s.to_i}

#clusterInfo.reveal-modal(data-reveal="")
%a.close-reveal-modal &#215

-#%h2
-#  Cluster details
-#.row
-#  %span.large-6.medium-8.small-8.columns
-#    %h3{:style => "margin-top: 15px"}
-#      Simulations:
-#    .row
-#      %span.columns{:style => "margin-top: 8px"}
-#        #{params[:simulations].gsub(/,/, ', ')}
-#    %h3{:style => "margin-top: 15px"}
-#      Number of simulations:
-#    .row
-#      %span.columns{:style => "margin-top: 8px"}
-#        #{simulation_array.length}
-#
-#-@content.each do |key, value|
-#  %span.large-6.medium-8.small-8.columns
-#    %h3{:style => "margin-top: 15px"}
-#      #{key.to_s.gsub(/_/, ' ').capitalize}:
-#    .row
-#      -input_parameters.each do |parameter|
-#        %span.columns{:style => "margin-top: 8px"}
-#          #{parameter}: #{value[parameter.to_s]}
-#    .row
-#      -output_parameters.each do |parameter|
-#        %span.columns{:style => "margin-top: 8px"}
-#          #{parameter}: #{value[parameter.to_s]}

%h2
  Details of cluster #{params[:cluster_id]}
%table{:width => "100%", :style => "border: 0px"}
  %tr
    %td{:valign => "top"}
      %a
        %h3{:style => "margin-top: 15px"}
          Parent cluster: #{params[:parent]}
        -#%span.columns{:style => "margin-top: 8px"}
          #{params[:parent]}
      %a
        %h3{:style => "margin-top: 15px"}
          Children clusters: #{params[:children]}
        -#%span.columns{:style => "margin-top: 8px"}
          #{params[:children]}
      %h3{:style => "margin-top: 15px"}
        Number of simulations: #{simulation_array.length}
      %a
        %h3.details_label{:style => "margin-top: 15px", :id => "", :href => "#"}
          Simulations:
        -simulation_array.each do |simulation|
          %a.simulation_number{:id => "#{simulation}", :href => "#"}
            #{simulation},

    %td{:width => "50%", :valign => "top"}
      %ul{id: "detailsList"}
        %dl.accordion{"data-accordion" => "myAccordion",:id => "Accordion", :style=> "text-align: left;"}
          - @content.each do |key, value|
            %dd.accordion-navigation{:style => "background: transparent;"}
              %a{:href => "##{key.to_s}", style: "text-align: left;"}
                %i.fa.fa-plus-circle{style: "color: 333"}
                #{key.to_s.gsub(/_/, ' ').capitalize}:
              %ul.content{:id => "#{key.to_s}", :style => "background: none; text-align: left;"}
                - @content[:"#{key.to_s}"].each do |key, index|
                  %li
                    %span{:style => "margin-top: 8px"}
                      #{key}: #{index}

-#%h2
-#  Cluster details
-#%table{:width => "100%", :style => "border: 0px"}
-#  %tr
-#    %td{:valign => "top"}
-#      %a
-#        %h3.details_label{:style => "margin-top: 15px", :id => "simulations", :href => "#"}
-#          Simulations
-#      %a
-#        %h3.details_label{:style => "margin-top: 15px", :id => "number_of_simulations", :href => "#"}
-#          Number of simulations
-#
-#      -@content.each do |key, value|
-#        %a
-#          %h3.details_label{:style => "margin-top: 15px", :id => key.to_s, :href => "#"}
-#            #{key.to_s.gsub(/_/, ' ').capitalize}
-#    %td{:width => "50%", :valign => "top"}
-#      .row{:id => "simulations_content", :style => 'display: none'}
-#        %h3.details_content{:style => "margin-top: 15px"}
-#          Simulations:
-#        .row
-#          -simulation_array.each do |simulation|
-#            %a.simulation_number{:id => "#{simulation}", :href => "#"}
-#              #{simulation}
-#      .row{:id => "number_of_simulations_content", :style => 'display: none'}
-#        %h3.details_content{:style => "margin-top: 15px"}
-#          Number of simulations:
-#        %span.columns{:style => "margin-top: 8px"}
-#          #{simulation_array.length}
-#      -@content.each do |key, value|
-#        .row{:id => "#{key.to_s}_content", :style => 'display: none'}
-#          %h3.details_content{:style => "margin-top: 15px"}
-#            #{key.to_s.gsub(/_/, ' ').capitalize}:
-#          -@content[:"#{key.to_s}"].each do |key, index|
-#            %span.columns{:style => "margin-top: 8px"}
-#              #{key}: #{index}

#extension-dialog.reveal-modal(data-reveal="")
:javascript
  $(function(){
    $('#clusterInfo').foundation('reveal', 'close');

    $(document).ready(function() {
    $("h3.details_label").click(function(event) {
      label = "#"+event.target.id;
      label_content = "#"+event.target.id+"_content";
      if (!$(label_content).is(":visible"))
        $(label_content).show();
      else
        $(label_content).hide();

    });
  });

    $(document).ready(function() {
    $("a.simulation_number").click(function(event) {
      var url = "#{@prefix}/experiments/#{@experiment.id}/simulations/"+event.target.id;
      var handler = function(data) {
        $('#extension-dialog').html(data);
        $('#extension-dialog').foundation('reveal', 'open');
        $('#extension-dialog').on("closed", function() {
          $('#clusterInfo').foundation('reveal', 'open');
        })
      }
      $('#extension-dialog').html(window.loaderHTML);
      getWithSession(url, {}, handler);
    });
  });

  $(".accordion").on("click", "dd", function (){
    $("dd.active").find(".content").slideUp("slow");
    if(!$(this).hasClass("active")) {
      $(this).find(".content").slideToggle("slow");
      $("dd").find('i').removeClass('fa fa-minus-circle').addClass('fa fa-plus-circle');
      $(this).find('i').addClass('fa fa-minus-circle');
      $("dd").removeClass("active");
      $(this).addClass("active");
    }
    else {
      $(this).find('i').removeClass('fa fa-minus-circle').addClass('fa fa-plus-circle');
      $(this).removeClass("active");
    }
  });

  $( "#Accordion" ).accordion({
    collapsible: true,
    active: false
  });




  });